#!/bin/bash

# üéØ TESTE COMPLETO DOS WEBHOOKS DO AGENTE1
# Execute este script para testar todos os webhooks

echo "üéØ TESTE COMPLETO DOS WEBHOOKS DO AGENTE1"
echo "=========================================="

# Configura√ß√µes
BASE_URL="https://n8n.code-iq.com.br/webhook"
USER_ID="SEU_USER_ID"  # Substitua pelo seu ID real
WORKFLOW_ID="eBcColwirndBaFZX"

echo ""
echo "üìä CONFIGURA√á√ïES:"
echo "‚Ä¢ Base URL: $BASE_URL"
echo "‚Ä¢ User ID: $USER_ID"
echo "‚Ä¢ Workflow ID: $WORKFLOW_ID"
echo ""

# 1Ô∏è‚É£ TESTE STATUS (ANTES)
echo "1Ô∏è‚É£ TESTANDO STATUS (ANTES DE INICIAR)..."
echo "----------------------------------------"
curl -X GET "$BASE_URL/status-agente1?usuario_id=$USER_ID&workflow_id=$WORKFLOW_ID&action=get_status" \
  -H "Content-Type: application/json" \
  -w "\nStatus: %{http_code}\n" \
  -s

echo ""
echo ""

# 2Ô∏è‚É£ TESTE START
echo "2Ô∏è‚É£ TESTANDO START (INICIAR AGENTE)..."
echo "-------------------------------------"
START_RESPONSE=$(curl -X POST "$BASE_URL/start-agente1" \
  -H "Content-Type: application/json" \
  -d "{
    \"action\": \"start\",
    \"agent_type\": \"$WORKFLOW_ID\",
    \"workflow_id\": \"$WORKFLOW_ID\",
    \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\",
    \"usuario_id\": \"$USER_ID\",
    \"logged_user\": {
      \"id\": \"$USER_ID\",
      \"name\": \"Teste User\",
      \"email\": \"teste@exemplo.com\"
    }
  }" \
  -w "\nStatus: %{http_code}\n" \
  -s)

echo "$START_RESPONSE"

# Extrair execution_id da resposta (se dispon√≠vel)
EXECUTION_ID=$(echo "$START_RESPONSE" | grep -o '"execution_id":"[^"]*"' | cut -d'"' -f4)
echo "üîç Execution ID capturado: $EXECUTION_ID"

echo ""
echo ""

# Aguardar um pouco para o agente iniciar
echo "‚è≥ Aguardando 5 segundos para o agente iniciar..."
sleep 5

# 3Ô∏è‚É£ TESTE STATUS (DURANTE)
echo "3Ô∏è‚É£ TESTANDO STATUS (DURANTE EXECU√á√ÉO)..."
echo "----------------------------------------"
curl -X GET "$BASE_URL/status-agente1?usuario_id=$USER_ID&workflow_id=$WORKFLOW_ID&action=get_status" \
  -H "Content-Type: application/json" \
  -w "\nStatus: %{http_code}\n" \
  -s

echo ""
echo ""

# 4Ô∏è‚É£ TESTE STOP
echo "4Ô∏è‚É£ TESTANDO STOP (PARAR AGENTE)..."
echo "----------------------------------"
curl -X POST "$BASE_URL/stop-agente1" \
  -H "Content-Type: application/json" \
  -d "{
    \"action\": \"stop\",
    \"agent_type\": \"$WORKFLOW_ID\",
    \"workflow_id\": \"$WORKFLOW_ID\",
    \"execution_id\": \"$EXECUTION_ID\",
    \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\",
    \"usuario_id\": \"$USER_ID\",
    \"logged_user\": {
      \"id\": \"$USER_ID\",
      \"name\": \"Teste User\",
      \"email\": \"teste@exemplo.com\"
    }
  }" \
  -w "\nStatus: %{http_code}\n" \
  -s

echo ""
echo ""

# Aguardar um pouco para o agente parar
echo "‚è≥ Aguardando 3 segundos para o agente parar..."
sleep 3

# 5Ô∏è‚É£ TESTE STATUS (AP√ìS)
echo "5Ô∏è‚É£ TESTANDO STATUS (AP√ìS PARAR)..."
echo "----------------------------------"
curl -X GET "$BASE_URL/status-agente1?usuario_id=$USER_ID&workflow_id=$WORKFLOW_ID&action=get_status" \
  -H "Content-Type: application/json" \
  -w "\nStatus: %{http_code}\n" \
  -s

echo ""
echo ""
echo "‚úÖ TESTE COMPLETO FINALIZADO!"
echo "=============================="
echo ""
echo "üìã RESUMO DOS TESTES:"
echo "‚Ä¢ Status inicial: Deve mostrar 'disconnected'"
echo "‚Ä¢ Start: Deve retornar execution_id"
echo "‚Ä¢ Status durante: Deve mostrar 'running'"
echo "‚Ä¢ Stop: Deve parar o agente"
echo "‚Ä¢ Status final: Deve mostrar 'disconnected'"
echo ""
echo "üîß PR√ìXIMOS PASSOS:"
echo "‚Ä¢ Verificar logs no n8n"
echo "‚Ä¢ Verificar dados no Redis"
echo "‚Ä¢ Verificar dados no PostgreSQL"
echo "‚Ä¢ Testar via frontend"
