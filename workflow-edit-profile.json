{
  "name": "Edit Profile",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "edit-profile",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "webhook-edit-profile",
      "name": "Webhook Edit Profile",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "edit-profile"
    },
    {
      "parameters": {
        "jsCode": "// Normalizar dados do perfil\nconst profileData = $json;\n\nconsole.log('üìù Dados recebidos para edi√ß√£o:', profileData);\n\n// Validar dados obrigat√≥rios\nif (!profileData.id) {\n  return {\n    json: {\n      success: false,\n      message: 'ID do perfil √© obrigat√≥rio para edi√ß√£o',\n      error: 'MISSING_PROFILE_ID'\n    }\n  };\n}\n\nif (!profileData.name) {\n  return {\n    json: {\n      success: false,\n      message: 'Nome do perfil √© obrigat√≥rio',\n      error: 'MISSING_PROFILE_NAME'\n    }\n  };\n}\n\n// Preparar dados normalizados\nconst normalizedData = {\n  id: parseInt(profileData.id),\n  nome_perfil: profileData.name,\n  descricao: profileData.description || '',\n  permissoes: Array.isArray(profileData.permissoes) ? profileData.permissoes.map(p => parseInt(p)) : [],\n  updated_at: new Date().toISOString()\n};\n\nconsole.log('‚úÖ Dados normalizados:', normalizedData);\n\nreturn {\n  json: normalizedData\n};"
      },
      "id": "normalizar-dados",
      "name": "Normalizar Dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE perfis SET nome_perfil = $1, descricao = $2, updated_at = NOW() WHERE id = $3 RETURNING id, nome_perfil, descricao, created_at, updated_at"
      },
      "id": "atualizar-perfil",
      "name": "Atualizar Perfil",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [680, 200],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM perfil_permissoes WHERE perfil_id = $1"
      },
      "id": "limpar-permissoes",
      "name": "Limpar Permiss√µes Antigas",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [680, 400],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO perfil_permissoes (perfil_id, permissao_id) VALUES {{ $json.perfil_id }}, {{ $json.permissao_id }})"
      },
      "id": "inserir-permissoes",
      "name": "Inserir Novas Permiss√µes",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [900, 400],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Preparar permiss√µes para inser√ß√£o\nconst profileData = $('Normalizar Dados').item.json;\n\nconsole.log('üîç Preparando permiss√µes para inser√ß√£o:', profileData.permissoes);\n\nif (!profileData.permissoes || profileData.permissoes.length === 0) {\n  console.log('‚ö†Ô∏è Nenhuma permiss√£o para inserir');\n  return [];\n}\n\n// Criar array de objetos para inser√ß√£o em lote\nconst permissoesParaInserir = profileData.permissoes.map(permissaoId => ({\n  json: {\n    perfil_id: profileData.id,\n    permissao_id: permissaoId\n  }\n}));\n\nconsole.log('‚úÖ Permiss√µes preparadas para inser√ß√£o:', permissoesParaInserir.length);\n\nreturn permissoesParaInserir;"
      },
      "id": "preparar-permissoes",
      "name": "Preparar Permiss√µes",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Processar resultado da edi√ß√£o\nconst perfilAtualizado = $('Atualizar Perfil').item.json;\nconst permissoesInseridas = $input.all();\n\nconsole.log('‚úÖ Perfil atualizado:', perfilAtualizado);\nconsole.log('‚úÖ Permiss√µes inseridas:', permissoesInseridas.length);\n\n// Buscar os IDs das permiss√µes que foram inseridas\nlet permissaoIds = [];\n\nif (permissoesInseridas && permissoesInseridas.length > 0) {\n  permissaoIds = permissoesInseridas.map(p => {\n    if (p.json && p.json.permissao_id) {\n      return p.json.permissao_id;\n    }\n    return null;\n  }).filter(id => id !== null);\n} else {\n  // Se n√£o h√° permiss√µes inseridas, buscar do n√≥ \"Normalizar Dados\"\n  const dadosNormalizados = $('Normalizar Dados').item.json;\n  if (dadosNormalizados && dadosNormalizados.permissoes) {\n    permissaoIds = dadosNormalizados.permissoes;\n  }\n}\n\nconsole.log('‚úÖ IDs das permiss√µes:', permissaoIds);\n\nconst resultado = {\n  success: true,\n  message: 'Perfil atualizado com sucesso',\n  data: {\n    id: perfilAtualizado.id,\n    nome_perfil: perfilAtualizado.nome_perfil,\n    descricao: perfilAtualizado.descricao,\n    created_at: perfilAtualizado.created_at,\n    updated_at: perfilAtualizado.updated_at,\n    permissoes: permissaoIds,\n    total_permissoes: permissaoIds.length\n  }\n};\n\nconsole.log('‚úÖ Resultado final:', resultado);\n\nreturn {\n  json: resultado\n};"
      },
      "id": "processar-resultado",
      "name": "Processar Resultado",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "responder-edicao",
      "name": "Responder Edi√ß√£o",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300]
    }
  ],
  "connections": {
    "Webhook Edit Profile": {
      "main": [
        [
          {
            "node": "Normalizar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalizar Dados": {
      "main": [
        [
          {
            "node": "Atualizar Perfil",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limpar Permiss√µes Antigas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpar Permiss√µes Antigas": {
      "main": [
        [
          {
            "node": "Preparar Permiss√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Permiss√µes": {
      "main": [
        [
          {
            "node": "Inserir Novas Permiss√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar Perfil": {
      "main": [
        [
          {
            "node": "Processar Resultado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inserir Novas Permiss√µes": {
      "main": [
        [
          {
            "node": "Processar Resultado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Processar Resultado": {
      "main": [
        [
          {
            "node": "Responder Edi√ß√£o",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
